services:
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 7000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  todo-app-backend:
    container_name: backend
    depends_on:
      - todo_app_postgres
    build:
      context: ./src/backend
      args:
        - FRAMEWORK=flask
    ports:
      - 5000:5000
    restart: unless-stopped
    volumes:
      # this binds the host folder to the container folder
      - ./src/backend/app:/app/backend/app
      # the json database will be stored in /database/json_database,
      # in the data volume
      - data:/database/json_database
    environment:
      # in the container, saves the database in this path
      # - DATABASE=json
      # - DATABASE_PATH=/database/json_database
      - DATABASE=postgresql
      - DB_DIALECT=postgresql
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_NAME=todo_db

  todo-app-frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./src/frontend/Dockerfile
    ports:
      - 3000:3000
    restart: unless-stopped
    working_dir: /app/frontend/
    volumes:
      - ./src/frontend/:/app/frontend/
      # avoid copying the node_modules folder from local to the container
      - /app/frontend/node_modules/
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true # allows hot reload on windows

  todo_app_postgres:
    container_name: postgres_db
    image: postgres:15.1-alpine
    restart: unless-stopped
    volumes:
      - postgres_db:/database/postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo_db

  postgres_metrics:
    container_name: postgres_metrics
    image: quay.io/prometheuscommunity/postgres-exporter
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@postgres_db:5432/todo_db?sslmode=disable
    ports:
      - 9187:9187

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"

# the path of data won't be erased on rebuild
volumes:
  data:
  postgres_db:
    driver: local
